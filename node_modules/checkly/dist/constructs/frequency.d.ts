/**
 * Represents a check execution frequency with optional offset.
 * Use the static constants for common scheduling patterns.
 *
 * @example
 * ```typescript
 * // High-frequency monitoring (every 30 seconds) - API/TCP only
 * frequency: Frequency.EVERY_30S
 *
 * // Standard API monitoring (every 5 minutes)
 * frequency: Frequency.EVERY_5M
 *
 * // Daily health checks (every 24 hours)
 * frequency: Frequency.EVERY_24H
 * ```
 *
 * @see {@link https://www.checklyhq.com/docs/monitoring/ | Monitoring Documentation}
 */
export declare class Frequency {
    /** Run every 10 seconds */
    static EVERY_10S: Frequency;
    /** Run every 20 seconds */
    static EVERY_20S: Frequency;
    /** Run every 30 seconds */
    static EVERY_30S: Frequency;
    /** Run every 1 minute */
    static EVERY_1M: Frequency;
    /** Run every 2 minutes */
    static EVERY_2M: Frequency;
    /** Run every 5 minutes */
    static EVERY_5M: Frequency;
    /** Run every 10 minutes */
    static EVERY_10M: Frequency;
    /** Run every 15 minutes */
    static EVERY_15M: Frequency;
    /** Run every 30 minutes */
    static EVERY_30M: Frequency;
    /** Run every 1 hour */
    static EVERY_1H: Frequency;
    /** Run every 2 hours */
    static EVERY_2H: Frequency;
    /** Run every 3 hours */
    static EVERY_3H: Frequency;
    /** Run every 6 hours */
    static EVERY_6H: Frequency;
    /** Run every 12 hours */
    static EVERY_12H: Frequency;
    /** Run every 24 hours */
    static EVERY_24H: Frequency;
    /** The frequency in minutes (or 0 for second-based frequencies) */
    frequency: number;
    /** The frequency offset in seconds (used for sub-minute frequencies) */
    frequencyOffset?: number;
    /**
     * Creates a new frequency instance.
     * Use the static constants instead of creating instances directly.
     *
     * @param frequency The frequency in minutes, or 0 for second-based frequencies
     * @param frequencyOffset The frequency offset in seconds (for sub-minute frequencies)
     */
    private constructor();
}
