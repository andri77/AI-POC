"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UrlMonitorCodegen = void 0;
const codegen_1 = require("./internal/codegen");
const sourcegen_1 = require("../sourcegen");
const monitor_codegen_1 = require("./monitor-codegen");
const url_request_codegen_1 = require("./url-request-codegen");
const construct = 'UrlMonitor';
class UrlMonitorCodegen extends codegen_1.Codegen {
    describe(resource) {
        return `URL Monitor: ${resource.name}`;
    }
    gencode(logicalId, resource, context) {
        const filePath = context.filePath('resources/url-monitors', resource.name, {
            tags: resource.tags,
            unique: true,
        });
        const file = this.program.generatedConstructFile(filePath.fullPath);
        file.namedImport(construct, 'checkly/constructs');
        file.section((0, sourcegen_1.expr)((0, sourcegen_1.ident)(construct), builder => {
            builder.new(builder => {
                builder.string(logicalId);
                builder.object(builder => {
                    builder.value('request', (0, url_request_codegen_1.valueForUrlRequest)(this.program, file, context, resource.request));
                    if (resource.degradedResponseTime !== undefined) {
                        builder.number('degradedResponseTime', resource.degradedResponseTime);
                    }
                    if (resource.maxResponseTime !== undefined) {
                        builder.number('maxResponseTime', resource.maxResponseTime);
                    }
                    (0, monitor_codegen_1.buildMonitorProps)(this.program, file, builder, resource, context);
                });
            });
        }));
    }
}
exports.UrlMonitorCodegen = UrlMonitorCodegen;
//# sourceMappingURL=url-monitor-codegen.js.map